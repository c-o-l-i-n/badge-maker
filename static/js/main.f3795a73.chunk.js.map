{"version":3,"sources":["components/TextField.js","components/ColorButton.js","components/ColorButtons.js","components/BadgeForm.js","components/Badge.js","components/BadgeArea.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","name","onType","nameCapitalized","capitalize","htmlFor","id","type","placeholder","onInput","e","target","value","string","split","map","word","toUpperCase","substr","join","defaultProps","ColorButton","index","onChangeColorCombo","onClick","ColorButtons","colorCombos","colorCombo","BadgeForm","onChangeRecipient","onChangeReason","onChangeIcon","onSubmit","preventDefault","Badge","icon","className","toLowerCase","BadgeArea","recipient","reason","Footer","Date","getFullYear","href","rel","App","root","document","documentElement","foreground","background","useState","setRecipient","setReason","setIcon","colorComboIndex","style","setProperty","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3795a73.chunk.js","sourcesContent":["export const TextField = ({ name, onType }) => {\n\tconst nameCapitalized = capitalize(name)\n\treturn (\n\t\t<>\n\t\t\t<label htmlFor={name}>{nameCapitalized}</label>\n\t\t\t<input\n\t\t\t\tid={`${name}-field`}\n\t\t\t\ttype='text'\n\t\t\t\tname={name}\n\t\t\t\tplaceholder={`Badge ${nameCapitalized}`}\n\t\t\t\tonInput={(e) => {\n\t\t\t\t\tonType(e.target.value)\n\t\t\t\t}}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nconst capitalize = (string) => {\n\tconst words = string.split(' ')\n\tconst capitalizedWords = words.map(\n\t\t(word) => word[0].toUpperCase() + word.substr(1)\n\t)\n\treturn capitalizedWords.join(' ')\n}\n\nTextField.defaultProps = {\n\tname: 'Text Field',\n}\n","export const ColorButton = ({ index, onChangeColorCombo }) => {\n\treturn (\n\t\t<button\n\t\t\tonClick={() => {\n\t\t\t\tonChangeColorCombo(index)\n\t\t\t}}\n\t\t>\n\t\t\t{index + 1}\n\t\t</button>\n\t)\n}\n","import { ColorButton } from './ColorButton'\n\nexport const ColorButtons = ({ colorCombos, onChangeColorCombo }) => {\n\treturn (\n\t\t<>\n\t\t\t<label>Color</label>\n\t\t\t<br />\n\t\t\t{colorCombos.map((colorCombo, index) => (\n\t\t\t\t<ColorButton\n\t\t\t\t\tkey={index}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tonChangeColorCombo={onChangeColorCombo}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n","import { TextField } from './TextField'\nimport { ColorButtons } from './ColorButtons'\n\nexport const BadgeForm = ({\n\tcolorCombos,\n\tonChangeRecipient,\n\tonChangeReason,\n\tonChangeIcon,\n\tonChangeColorCombo,\n}) => {\n\treturn (\n\t\t<form\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault()\n\t\t\t}}\n\t\t>\n\t\t\t<TextField name='recipient' onType={onChangeRecipient} />\n\t\t\t<TextField name='reason' onType={onChangeReason} />\n\t\t\t<TextField name='icon' onType={onChangeIcon} />\n\n\t\t\t<ColorButtons\n\t\t\t\tcolorCombos={colorCombos}\n\t\t\t\tonChangeColorCombo={onChangeColorCombo}\n\t\t\t/>\n\t\t</form>\n\t)\n}\n","export const Badge = ({ icon }) => {\n\treturn (\n\t\t<div className='fa-stack fa-4x badge'>\n\t\t\t<i className='fa fa-circle fa-stack-2x badge-background'></i>\n\t\t\t<i className='fa fa-circle-o fa-stack-2x badge-foreground'></i>\n\t\t\t<i\n\t\t\t\tid='icon'\n\t\t\t\tclassName={`fas fa-${\n\t\t\t\t\ticon.toLowerCase() || 'star'\n\t\t\t\t} fa-stack-1x badge-foreground`}\n\t\t\t></i>\n\t\t</div>\n\t)\n}\n","import { Badge } from './Badge'\n\nexport const BadgeArea = ({ recipient, reason, icon }) => {\n\treturn (\n\t\t<div id='badge-area'>\n\t\t\t<h1>{recipient}</h1>\n\t\t\t<p>has earned</p>\n\t\t\t<Badge icon={icon} />\n\t\t\t<h2>\"{reason}\"</h2>\n\t\t</div>\n\t)\n}\n\nBadgeArea.defaultProps = {\n\trecipient: 'Your Friend',\n\treason: 'This Really Cool Badge',\n\ticon: 'star',\n}\n","import React from 'react'\n\nexport const Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>&copy; {new Date().getFullYear()} Colin Williams</p>\n\t\t\t<p>\n\t\t\t\tIcons by{' '}\n\t\t\t\t<a href='https://fontawesome.com/' target='_blank' rel='noreferrer'>\n\t\t\t\t\tFont Awesome\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</footer>\n\t)\n}\n","import { useState, useEffect } from 'react'\nimport './App.css'\nimport { BadgeForm } from './components/BadgeForm'\nimport { BadgeArea } from './components/BadgeArea'\nimport { Footer } from './components/Footer'\n\nconst App = () => {\n\tconst root = document.documentElement\n\n\tconst colorCombos = [\n\t\t{\n\t\t\tforeground: 'yellowgreen',\n\t\t\tbackground: 'blue',\n\t\t},\n\t\t{\n\t\t\tforeground: 'red',\n\t\t\tbackground: 'yellow',\n\t\t},\n\t\t{\n\t\t\tforeground: 'black',\n\t\t\tbackground: 'white',\n\t\t},\n\t\t{\n\t\t\tforeground: 'white',\n\t\t\tbackground: 'purple',\n\t\t},\n\t]\n\n\tconst [recipient, setRecipient] = useState('Your Friend')\n\tconst [reason, setReason] = useState('This Really Cool Badge')\n\tconst [icon, setIcon] = useState('star')\n\n\tconst onChangeColorCombo = (colorComboIndex) => {\n\t\tconst colorCombo = colorCombos[colorComboIndex]\n\t\troot.style.setProperty('--badge-foreground-color', colorCombo.foreground)\n\t\troot.style.setProperty('--badge-background-color', colorCombo.background)\n\t}\n\n\tuseEffect(() => {\n\t\tonChangeColorCombo(0)\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Badge Maker</h1>\n\t\t\t<BadgeForm\n\t\t\t\tcolorCombos={colorCombos}\n\t\t\t\tonChangeRecipient={setRecipient}\n\t\t\t\tonChangeReason={setReason}\n\t\t\t\tonChangeIcon={setIcon}\n\t\t\t\tonChangeColorCombo={onChangeColorCombo}\n\t\t\t/>\n\t\t\t<BadgeArea recipient={recipient} reason={reason} icon={icon} />\n\t\t\t<Footer />\n\t\t</>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}